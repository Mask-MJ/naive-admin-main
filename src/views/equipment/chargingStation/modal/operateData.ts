import type { FormSchema } from '@/components/Form';

export const schemas: FormSchema[] = [
  { path: 'stationId', component: 'NInput', show: false },
  {
    path: 'stationName',
    component: 'NInput',
    label: '充电站名称',
    componentProps: { disabled: true },
  },
  { path: 'divider-basic', component: 'NDivider', renderComponentContent: '运营设置' },
  {
    path: 'appointment',
    component: 'NRadioGroup',
    label: '充电预约',
    defaultValue: false,
    componentProps: {
      options: [
        { label: '启用', value: true },
        { label: '禁用', value: false },
      ],
    },
  },
  {
    path: 'serviceFacility',
    component: 'NSelect',
    label: '站点服务设施',
    defaultValue: [],
    componentProps: {
      multiple: true,
      options: [
        { label: '洗车', value: 1 },
        { label: '厕所', value: 2 },
        { label: '免费wifi', value: 3 },
        { label: '空调休息室', value: 4 },
        { label: '按摩室', value: 5 },
        { label: '便利店', value: 6 },
        { label: '快餐', value: 7 },
      ],
    },
  },
  {
    path: 'aroundFacility',
    component: 'NSelect',
    label: '周边基础设施',
    defaultValue: [],
    componentProps: {
      multiple: true,
      options: [
        { label: '近学校', value: 1 },
        { label: '近地铁站', value: 2 },
        { label: '近机场', value: 3 },
        { label: '近商场', value: 4 },
        { label: '近高速', value: 5 },
        { label: '近火车站', value: 6 },
        { label: '近汽车站', value: 7 },
        { label: '近4s店', value: 8 },
      ],
    },
  },
  {
    path: 'parkingDiscounts',
    component: 'NSwitch',
    label: '停车时关联车辆有停车优惠',
    defaultValue: false,
    span: 12,
    labelWidth: 200,
  },
  {
    path: 'forcePlateNo',
    component: 'NSwitch',
    label: '启动充电强制输入车牌号',
    defaultValue: false,
    span: 12,
    labelWidth: 200,
  },
  {
    path: 'info',
    component: 'NRadioGroup',
    labelWidth: 0,
    defaultValue: 1,
    componentProps: {
      type: 'Button',
      options: [
        { label: '站点公告', value: 1 },
        { label: '停车说明', value: 2 },
        { label: '开放时间说明', value: 3 },
        { label: '优惠信息说明', value: 4 },
      ],
    },
  },
  {
    path: 'notice',
    component: 'NInput',
    ifShow: ({ values }) => values.info === 1,
    componentProps: { type: 'textarea', placeholder: '请输入站点公告' },
  },
  {
    path: 'parkingDescription',
    component: 'NInput',
    ifShow: ({ values }) => values.info === 2,
    componentProps: { type: 'textarea', placeholder: '请输入停车说明' },
  },
  {
    path: 'devTimeDescription',
    component: 'NInput',
    ifShow: ({ values }) => values.info === 3,
    componentProps: { type: 'textarea', placeholder: '请输入开放时间说明' },
  },
  {
    path: 'discountsDescription',
    component: 'NInput',
    ifShow: ({ values }) => values.info === 4,
    componentProps: { type: 'textarea', placeholder: '请输入优惠信息说明' },
  },
  { path: 'divider-basic', component: 'NDivider', renderComponentContent: '小票设置' },
  {
    path: 'receiptReceive',
    component: 'NSwitch',
    label: '启用小票领取',
    defaultValue: false,
    span: 8,
  },
  {
    path: 'outboundMode',
    component: 'NRadioGroup',
    label: '停车场出站方式',
    defaultValue: 1,
    labelWidth: 120,
    span: 16,
    componentProps: {
      options: [
        { label: '扫一扫核销', value: 1 },
        { label: '纸质小票', value: 2 },
      ],
    },
  },
  {
    path: 'receiptReceiveLimit',
    label: '领取限制',
    component: 'NInputNumber',
    ifShow: ({ values }) => values.receiptReceive,
    span: 12,
    required: true,
    renderComponentContent: () => ({ suffix: () => '元' }),
    componentProps: { precision: 2, min: 0.01, max: 100000, showButton: false },
  },
  {
    path: 'receiptValidity',
    label: '有效期',
    component: 'NInputNumber',
    ifShow: ({ values }) => values.receiptReceive,
    span: 12,
    renderComponentContent: () => ({ suffix: () => '小时' }),
    required: true,
    componentProps: { precision: 0, min: 0, max: 100, showButton: false },
  },
  {
    path: 'receiptDescription',
    label: '小票说明',
    component: 'NInput',
    required: true,
    ifShow: ({ values }) => values.receiptReceive,
    componentProps: { type: 'textarea', maxlength: 200 },
  },
  { path: 'divider-basic', component: 'NDivider', renderComponentContent: '安全设置' },
  {
    path: 'powerAlarm',
    component: 'NSwitch',
    label: '启用用电告警',
    defaultValue: false,
    span: 12,
  },
  {
    path: 'alarmThreshold',
    label: '告警值',
    component: 'NInputNumber',
    span: 12,
    renderComponentContent: () => ({ suffix: () => 'kw' }),
    componentProps: { precision: 2, min: 0, max: 100000, showButton: false },
  },
  {
    path: 'kva',
    label: '充电站供电容量',
    component: 'NInputNumber',
    labelWidth: 150,
    renderComponentContent: () => ({ suffix: () => 'kw' }),
    componentProps: { precision: 2, min: 0, max: 100000, showButton: false },
  },
  {
    path: 'outageSoc',
    label: '车辆电池SOC达到',
    labelWidth: 150,
    component: 'NInputNumber',
    renderComponentContent: () => ({ suffix: () => '%停止充电(仅对直流桩有效)' }),
    componentProps: { precision: 0, min: 0, max: 100, showButton: false },
  },
];
